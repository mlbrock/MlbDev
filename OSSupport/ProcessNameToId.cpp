// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	MLB Operating System Support (OSSupport) Library Module File
// ////////////////////////////////////////////////////////////////////////////
/*
	File Name  			:	%M%

	File Version      :	%I%

	Last Extracted		:	%D%	%T%

	Last Updated		:	%E%	%U%

	File Description	:	Resolves a process name to its process identifier.

	Revision History	:	1998-04-08 --- Creation.
									Michael L. Brock

		Copyright Michael L. Brock 1998 - 2014.
		Distributed under the Boost Software License, Version 1.0.
		(See accompanying file LICENSE_1_0.txt or copy at
		http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <OSSupport.h>

// ////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace OSSupport {

// ////////////////////////////////////////////////////////////////////////////
unsigned int ProcessNameToId(const std::string &process_name,
	std::vector<MLB::Utility::ProcessId> &process_id_list, unsigned int max_count,
	bool throw_if_not_found)
{
#ifdef _Windows
	return(ResolveProcessNameToId(process_name, process_id_list, max_count,
		throw_if_not_found));
#else
	ThrowNotSupported("ProcessNameToId");

	return(0);
#endif // #ifdef _Windows
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
MLB::Utility::ProcessId ProcessNameToId(const std::string &process_name)
{
#ifdef _Windows
	return(ResolveProcessNameToId(process_name));
#else
	ThrowNotSupported("ProcessNameToId");

	return(0);
#endif // #ifdef _Windows
}
// ////////////////////////////////////////////////////////////////////////////

} // namespace OSSupport

} // namespace MLB

