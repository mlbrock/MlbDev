// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	29 West LBM API Wrapper Library Module File
// ////////////////////////////////////////////////////////////////////////////
/*
	File Name			:	%M%

	File Version		:	%I%

	Last Extracted		:	%D%	%T%

	Last Updated		:	%E%	%U%

	File Description	:	Implementation of the LbmExceptionStatus class.

	Revision History	:	2008-08-16 --- Creation.
									Michael L. Brock

		Copyright Michael L. Brock 2008 - 2015.
		Distributed under the Boost Software License, Version 1.0.
		(See accompanying file LICENSE_1_0.txt or copy at
		http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
//	Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <LbmWrapper/LbmWrapper.hpp>

#include <string.h>

//	////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace LbmWrapper {

//	////////////////////////////////////////////////////////////////////////////
LbmExceptionStatus::LbmExceptionStatus()
	:LbmException(GetStatusString())
	,lbm_error_code_(::lbm_errnum())
{
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
LbmExceptionStatus::LbmExceptionStatus(const char *except_string)
	:LbmException(GetStatusString(except_string))
	,lbm_error_code_(::lbm_errnum())
{
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
LbmExceptionStatus::LbmExceptionStatus(const std::string &except_string)
	:LbmException(GetStatusString(except_string.c_str()))
	,lbm_error_code_(::lbm_errnum())
{
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
LbmExceptionStatus::LbmExceptionStatus(const std::ostringstream &except_string)
	:LbmException(GetStatusString(except_string.str().c_str()))
	,lbm_error_code_(::lbm_errnum())
{
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
LbmExceptionStatus::~LbmExceptionStatus() MBCOMPAT_EXCEPT_NOTHROW
{
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
int LbmExceptionStatus::GetStatus() const
{
	return(lbm_error_code_);
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
void LbmExceptionStatus::Rethrow(const char *except_string) const
{
	LbmExceptionStatus tmp_except(*this);

	tmp_except.SetWhat(except_string);

	throw tmp_except;
}
//	////////////////////////////////////////////////////////////////////////////

//	////////////////////////////////////////////////////////////////////////////
std::string LbmExceptionStatus::GetStatusString(const char *other_text)
{
	const char         *lbm_error_string = ::lbm_errmsg();
	std::ostringstream  status_string;

	status_string << "29 West/LBM exception resulted from status code = " <<
		::lbm_errnum() << ", status text = '" <<
		((lbm_error_string != NULL) ? lbm_error_string : "*UNKNOWN ERROR*") <<
		"'" << ((other_text != NULL) ? ": " : "") <<
		((other_text != NULL) ? other_text : "");

	return(status_string.str());
}
//	////////////////////////////////////////////////////////////////////////////

} // namespace LbmWrapper

} // namespace MLB

