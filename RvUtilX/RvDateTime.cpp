// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	TibCo/Rendezvous Support Library Module
// ////////////////////////////////////////////////////////////////////////////
/*
	File Name			:	%M%

	File Version		:	%I%

	Last Extracted		:	%D%	%T%

	Last Updated		:	%E%	%U%

	File Description	:	Support for conversions between Rendezvous date/time
								formats and other formats.

	Revision History	:	2001-10-01 --- Creation.
									Michael L. Brock

		Copyright Michael L. Brock 2001 - 2017.
		Distributed under the Boost Software License, Version 1.0.
		(See accompanying file LICENSE_1_0.txt or copy at
		http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <RvUtilX.hpp>

// ////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace RvUtilX {

// ////////////////////////////////////////////////////////////////////////////
MLB::Utility::TimeSpec &FromTibDateTime(const tibrvMsgDateTime &src_dt,
	MLB::Utility::TimeSpec &dst_dt)
{
	dst_dt = MLB::Utility::TimeSpec(
		static_cast<time_t>(src_dt.sec), static_cast<long>(src_dt.nsec));

	return(dst_dt);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
MLB::Utility::TimeSpec FromTibDateTime(const tibrvMsgDateTime &src_dt)
{
	MLB::Utility::TimeSpec dst_dt(0, 0);

	return(FromTibDateTime(src_dt, dst_dt));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
MLB::Utility::TimeVal &FromTibDateTime(const tibrvMsgDateTime &src_dt,
	MLB::Utility::TimeVal &dst_dt)
{
	MLB::Utility::TimeSpec tmp_dst_dt;

	dst_dt = FromTibDateTime(src_dt, tmp_dst_dt).ToTimeVal();

	return(dst_dt);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
tibrvMsgDateTime &ToTibDateTime(const MLB::Utility::TimeSpec &src_dt,
	tibrvMsgDateTime &dst_dt)
{
	dst_dt.sec  = src_dt.tv_sec;
	dst_dt.nsec = static_cast<tibrv_u32>(src_dt.tv_nsec);

	return(dst_dt);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
tibrvMsgDateTime &ToTibDateTime(const MLB::Utility::TimeSpec &src_dt)
{
	tibrvMsgDateTime dst_dt;

	return(ToTibDateTime(src_dt, dst_dt));
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
tibrvMsgDateTime &ToTibDateTime(const MLB::Utility::TimeVal &src_dt,
	tibrvMsgDateTime &dst_dt)
{
	dst_dt.sec  = src_dt.tv_sec;
	dst_dt.nsec = static_cast<tibrv_u32>(src_dt.tv_usec) * 1000;

	return(dst_dt);
}
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
tibrvMsgDateTime &ToTibDateTime(const MLB::Utility::TimeVal &src_dt)
{
	tibrvMsgDateTime dst_dt;

	return(ToTibDateTime(src_dt, dst_dt));
}
// ////////////////////////////////////////////////////////////////////////////

} // namespace RvUtilX

} // namespace MLB

